[{"/Users/Alan/Documents/JavaScript/deskpods/src/index.js":"1","/Users/Alan/Documents/JavaScript/deskpods/src/App.js":"2","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js":"3","/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js":"4","/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js":"5","/Users/Alan/Documents/JavaScript/deskpods/src/utils.js":"6","/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js":"7","/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js":"8","/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js":"9"},{"size":562,"mtime":1614868202841,"results":"10","hashOfConfig":"11"},{"size":756,"mtime":1614955703190,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611930693944,"results":"13","hashOfConfig":"14"},{"size":856,"mtime":1614867584068,"results":"15","hashOfConfig":"11"},{"size":1533,"mtime":1614965989169,"results":"16","hashOfConfig":"11"},{"size":304,"mtime":1614871066587,"results":"17","hashOfConfig":"11"},{"size":3440,"mtime":1614955622862,"results":"18","hashOfConfig":"11"},{"size":501,"mtime":1614961525737,"results":"19","hashOfConfig":"11"},{"size":197,"mtime":1614965139187,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"z2dtmz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"2b9l4k",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Alan/Documents/JavaScript/deskpods/src/index.js",["44"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["45","46"],"/Users/Alan/Documents/JavaScript/deskpods/src/App.js",["47","48","49","50","51"],"import { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport \"react-spotify-auth/dist/index.css\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport Cookies from \"js-cookie\";\n\nimport Episodes from \"./components/Episodes\";\nimport LandingPage from \"./LandingPage\";\nimport LoggedIn from \"./LoggedIn\";\n\nfunction App() {\n  const token = Cookies.get(\"spotifyAuthToken\");\n\n  return (\n    <div\n      className=\"app\"\n      class=\"--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));\"\n    >\n      {token ? (\n        <LoggedIn token={token} />\n      ) : (\n        // Display the login page\n        <LandingPage />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js",[],["52","53"],"/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js",["54","55"],"/Users/Alan/Documents/JavaScript/deskpods/src/utils.js",["56"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js",["57","58","59","60","61","62"],"// import { grabLatest } from \"./utils\";\nimport React, { useState, useEffect } from \"react\";\nconst axios = require(\"axios\");\n\nexport default function Episodes(props) {\n  const { subscribedPods, setSubscribedPods, token } = props;\n\n  console.log(token);\n\n  const [userId, setUserId] = useState(\"\");\n\n  //grab userId\n  const userHeader = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  const grabUser = async () => {\n    const foundUser = await axios.get(\n      \"https://api.spotify.com/v1/me\",\n      userHeader\n    );\n    return foundUser.data;\n  };\n\n  //grab users'podcasts\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n\n    return res.data.items;\n  };\n\n  const createPlaylist = async (user_id) => {\n    const metaData = {\n      name: \"New Pods\",\n      description: \"Latest Podcasts\",\n      public: false,\n    };\n\n    const newPlaylist = await axios.post(\n      `https://api.spotify.com/v1/users/${user_id}/playlists`,\n      metaData,\n      axiosHeader\n    );\n\n    console.log(newPlaylist);\n    return newPlaylist.data;\n  };\n\n  const addToPlaylist = async (playlist_id, episodes) => {\n    const convertURI = (uri) => {\n      return uri.split(\":\").join(\"%3A\");\n    };\n\n    let episodesAdded = [];\n    for (let i = 0; i < 50; i++) {\n      const currEp = convertURI(episodes[i].uri);\n\n      episodesAdded.push(currEp);\n    }\n    episodesAdded = episodesAdded.join(\"%2C\");\n    console.log(\"new podcasts\", episodesAdded);\n\n    await axios.post(\n      `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?uris=${episodesAdded}`,\n      {},\n      axiosHeader\n    );\n\n    console.log(\"added new episodes to playlist\");\n  };\n\n  const getSubscriptions = async () => {\n    const res = await axios.get(\n      \"https://api.spotify.com/v1/me/shows?limit=50\",\n      axiosHeader\n    );\n\n    const subscriptions = [];\n\n    res.data.items.forEach(async (pod) => {\n      subscriptions.push(pod.show);\n    });\n\n    console.log(\"users subscriptions\", subscriptions);\n    const currUser = await grabUser();\n    setUserId(currUser.id);\n    setSubscribedPods(subscriptions);\n  };\n\n  // let allEpisodes = [];\n\n  // for (const pod of subscriptions) {\n  //   let currList = grabLatest(pod, axiosHeader);\n  //   allEpisodes = [...allEpisodes, grabLatest(pod)];\n  // }\n\n  // allEpisodes = await Promise.all(allEpisodes);\n\n  // let flatList = [];\n  // allEpisodes.forEach((list) => {\n  //   list.forEach((episode) => {\n  //     flatList.push(episode);\n  //   });\n  // });\n  // flatList.sort(\n  //   (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n  // );\n\n  // const newPlaylist = await createPlaylist(currUser.id);\n  // addToPlaylist(newPlaylist.id, flatList);\n  // console.log(newPlaylist.id);\n  // console.log(flatList);\n\n  useEffect(getSubscriptions, []);\n\n  console.log(userId, subscribedPods.length);\n\n  return (\n    <div>\n      <h1> Latest Podcast Episdoes</h1>\n      <h5>{userId}</h5>\n      {/* {subscribedPods.map((pod) => {\n        return (\n          <div>\n            <p>{pod.name}</p>\n            <img src={pod.images[2].url} />\n          </div>\n        );\n      })} */}\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js",["63","64"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js",["65"],{"ruleId":"66","severity":1,"message":"67","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":21},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":21},{"ruleId":"66","severity":1,"message":"75","line":1,"column":23,"nodeType":"68","messageId":"69","endLine":1,"endColumn":29},{"ruleId":"66","severity":1,"message":"76","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":21},{"ruleId":"66","severity":1,"message":"77","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":16},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":21},{"ruleId":"66","severity":1,"message":"80","line":16,"column":9,"nodeType":"68","messageId":"69","endLine":16,"endColumn":23},{"ruleId":"66","severity":1,"message":"81","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":17},{"ruleId":"66","severity":1,"message":"82","line":34,"column":9,"nodeType":"68","messageId":"69","endLine":34,"endColumn":19},{"ruleId":"66","severity":1,"message":"81","line":36,"column":11,"nodeType":"68","messageId":"69","endLine":36,"endColumn":19},{"ruleId":"66","severity":1,"message":"80","line":45,"column":9,"nodeType":"68","messageId":"69","endLine":45,"endColumn":23},{"ruleId":"66","severity":1,"message":"83","line":62,"column":9,"nodeType":"68","messageId":"69","endLine":62,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":85,"column":28,"nodeType":"86","endLine":101,"endColumn":4},{"ruleId":"84","severity":1,"message":"87","line":127,"column":31,"nodeType":"88","endLine":127,"endColumn":33,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":11,"column":9,"nodeType":"92","endLine":11,"endColumn":78},{"ruleId":"93","severity":1,"message":"94","line":11,"column":17,"nodeType":"95","messageId":"96","endLine":11,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":7,"column":7,"nodeType":"92","endLine":7,"endColumn":34},"no-unused-vars","'SpotifyPlayer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'SpotifyAuth' is defined but never used.","'Scopes' is defined but never used.","'SpotifyApiContext' is defined but never used.","'Episodes' is defined but never used.",["99"],["100"],"'createPlaylist' is assigned a value but never used.","'episodes' is assigned a value but never used.","'grabLatest' is assigned a value but never used.","'addToPlaylist' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'axiosHeader', 'grabUser', and 'setSubscribedPods'. Either include them or remove the dependency array.","ArrayExpression",["101"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [axiosHeader, grabUser, setSubscribedPods]",{"range":"104","text":"105"},[3094,3096],"[axiosHeader, grabUser, setSubscribedPods]"]