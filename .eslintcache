[{"/Users/Alan/Documents/JavaScript/deskpods/src/index.js":"1","/Users/Alan/Documents/JavaScript/deskpods/src/App.js":"2","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js":"3","/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js":"4","/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js":"5","/Users/Alan/Documents/JavaScript/deskpods/src/utils.js":"6","/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js":"7","/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js":"8","/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js":"9","/Users/Alan/Documents/JavaScript/deskpods/src/Success.js":"10"},{"size":651,"mtime":1615301366899,"results":"11","hashOfConfig":"12"},{"size":846,"mtime":1615301267118,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611930693944,"results":"14","hashOfConfig":"15"},{"size":1241,"mtime":1615232024788,"results":"16","hashOfConfig":"12"},{"size":5086,"mtime":1615307564366,"results":"17","hashOfConfig":"12"},{"size":304,"mtime":1614871066587,"results":"18","hashOfConfig":"12"},{"size":3489,"mtime":1614977596467,"results":"19","hashOfConfig":"12"},{"size":501,"mtime":1614961525737,"results":"20","hashOfConfig":"12"},{"size":695,"mtime":1615231560723,"results":"21","hashOfConfig":"12"},{"size":693,"mtime":1615390813000,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},"z2dtmz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2b9l4k",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Alan/Documents/JavaScript/deskpods/src/index.js",["52"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import reportWebVitals from './reportWebVitals';\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["53","54"],"/Users/Alan/Documents/JavaScript/deskpods/src/App.js",["55","56","57","58"],"import { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport \"react-spotify-auth/dist/index.css\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport LandingPage from \"./LandingPage\";\nimport LoggedIn from \"./LoggedIn\";\n\nfunction App() {\n  const history = useHistory();\n  const token = Cookies.get(\"spotifyAuthToken\");\n  console.log(\"app history\", history);\n\n  return (\n    <div\n      className=\"app\"\n      class=\"--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));\"\n    >\n      {token ? (\n        <LoggedIn history={history} token={token} />\n      ) : (\n        // Display the login page\n        <LandingPage />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js",[],["59","60"],"/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js",["61","62","63","64","65"],"import React, { useState, useEffect } from \"react\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport ShowCard from \"./components/ShowCard\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\n\nimport Success from \"./Success\";\n\nconst axios = require(\"axios\");\n\nexport default function LoggedIn({ history, token }) {\n  const [subscribedPods, setSubscribedPods] = useState([]);\n  // const [showModal, setShowModal] = useState(false);\n  const [selectShows, setSelectShows] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n\n  console.log(\"browser history\", history);\n\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const userHeader = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  const grabUser = async () => {\n    const foundUser = await axios.get(\n      \"https://api.spotify.com/v1/me\",\n      userHeader\n    );\n    return foundUser.data;\n  };\n\n  const getSubscriptions = async () => {\n    const res = await axios.get(\n      \"https://api.spotify.com/v1/me/shows?limit=50\",\n      axiosHeader\n    );\n\n    const subscriptions = [];\n\n    res.data.items.forEach(async (pod) => {\n      subscriptions.push(pod.show);\n    });\n\n    console.log(\"users subscriptions\", subscriptions);\n    const currUser = await grabUser();\n    setUserId(currUser.id);\n    setSubscribedPods(subscriptions);\n  };\n\n  const createPlaylist = async (user_id) => {\n    let today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    const yyyy = today.getFullYear();\n\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n\n    const metaData = {\n      name: `Pods for ${today}`,\n      description: \"Latest podcasts from your subscriptions\",\n      public: false,\n    };\n\n    const newPlaylist = await axios.post(\n      `https://api.spotify.com/v1/users/${user_id}/playlists`,\n      metaData,\n      axiosHeader\n    );\n\n    console.log(newPlaylist);\n    return newPlaylist.data;\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n    console.log(res);\n    return res.data.items;\n  };\n\n  const addToPlaylist = async (playlist_id, episodes) => {\n    const convertURI = (uri) => {\n      return uri.split(\":\").join(\"%3A\");\n    };\n\n    let episodesAdded = [];\n    for (let i = 0; i < 50; i++) {\n      const currEp = convertURI(episodes[i].uri);\n\n      episodesAdded.push(currEp);\n    }\n    episodesAdded = episodesAdded.join(\"%2C\");\n\n    await axios.post(\n      `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?uris=${episodesAdded}`,\n      {},\n      axiosHeader\n    );\n\n    console.log(\"added new episodes to playlist\");\n  };\n\n  const createUpdated = async () => {\n    const keptPods = subscribedPods.filter((show) => {\n      return !selectShows.includes(show.id);\n    });\n\n    let allEpisodes = [];\n\n    keptPods.map((show) => {\n      allEpisodes.push(grabLatest(show));\n    });\n\n    allEpisodes = await Promise.all(allEpisodes);\n\n    let flatList = [];\n    allEpisodes.forEach((list) => {\n      list.forEach((episode) => {\n        flatList.push(episode);\n      });\n    });\n    flatList.sort(\n      (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n    );\n\n    const newPlaylist = await createPlaylist(userId);\n    addToPlaylist(newPlaylist.id, flatList);\n\n    history.push(\"/success\");\n    // console.log(flatList);\n    // console.log(keptPods.length, keptPods);\n  };\n\n  useEffect(getSubscriptions, []);\n\n  // const openModal = () => setShowModal(true);\n  // const closeModal = () => setShowModal(false);\n\n  console.log(subscribedPods);\n  console.log(\"Selected\", selectShows);\n  return (\n    <div class=\"min-h-screen  bg-gradient-to-b from-purple-900 via-gray-500 to-green-400 ... \">\n      <Switch>\n        <Route path=\"/success\" component={Success} />\n        <SpotifyApiContext.Provider value={token}>\n          <h1 class=\"p-20 text-white text-7xl font-bold flex justify-center ... \">\n            Any shows you want to exlude?\n          </h1>\n          <div class=\"flex flex-wrap\">\n            {subscribedPods.map((show) => {\n              return (\n                <ShowCard\n                  name={show.name}\n                  id={show.id}\n                  thumbnail={show.images[2]}\n                  setSelectShows={setSelectShows}\n                  selectShows={selectShows}\n                />\n              );\n            })}\n          </div>\n          <div class=\"p-20 flex justify-center\">\n            <button\n              class=\"animate-bounce h-25 px-15 m-2 bg-gradient-to-r from-green-400 to-green-500 ... hover:bg-green-900 text-white font-bold py-2 px-4 rounded-full \"\n              onClick={createUpdated}\n            >\n              + Create Playlist\n            </button>\n          </div>\n        </SpotifyApiContext.Provider>\n      </Switch>\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/utils.js",["66"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js",["67","68","69","70","71","72","73","74","75"],"// import { grabLatest } from \"./utils\";\nimport React, { useState, useEffect } from \"react\";\nconst axios = require(\"axios\");\n\nexport default function Episodes(props) {\n  const { subscribedPods, setSubscribedPods, token } = props;\n\n  console.log(token);\n\n  // const [userId, setUserId] = useState(\"\");\n\n  //grab userId\n  const userHeader = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  // const grabUser = async () => {\n  //   const foundUser = await axios.get(\n  //     \"https://api.spotify.com/v1/me\",\n  //     userHeader\n  //   );\n  //   return foundUser.data;\n  // };\n\n  //grab users'podcasts\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n\n    return res.data.items;\n  };\n\n  const createPlaylist = async (user_id) => {\n    const metaData = {\n      name: \"New Pods\",\n      description: \"Latest Podcasts\",\n      public: false,\n    };\n\n    const newPlaylist = await axios.post(\n      `https://api.spotify.com/v1/users/${user_id}/playlists`,\n      metaData,\n      axiosHeader\n    );\n\n    console.log(newPlaylist);\n    return newPlaylist.data;\n  };\n\n  const addToPlaylist = async (playlist_id, episodes) => {\n    const convertURI = (uri) => {\n      return uri.split(\":\").join(\"%3A\");\n    };\n\n    let episodesAdded = [];\n    for (let i = 0; i < 50; i++) {\n      const currEp = convertURI(episodes[i].uri);\n\n      episodesAdded.push(currEp);\n    }\n    episodesAdded = episodesAdded.join(\"%2C\");\n    console.log(\"new podcasts\", episodesAdded);\n\n    await axios.post(\n      `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?uris=${episodesAdded}`,\n      {},\n      axiosHeader\n    );\n\n    console.log(\"added new episodes to playlist\");\n  };\n\n  // const getSubscriptions = async () => {\n  //   const res = await axios.get(\n  //     \"https://api.spotify.com/v1/me/shows?limit=50\",\n  //     axiosHeader\n  //   );\n\n  //   const subscriptions = [];\n\n  //   res.data.items.forEach(async (pod) => {\n  //     subscriptions.push(pod.show);\n  //   });\n\n  //   console.log(\"users subscriptions\", subscriptions);\n  //   const currUser = await grabUser();\n  //   setUserId(currUser.id);\n  //   setSubscribedPods(subscriptions);\n  // };\n\n  // let allEpisodes = [];\n\n  // for (const pod of subscriptions) {\n  //   let currList = grabLatest(pod, axiosHeader);\n  //   allEpisodes = [...allEpisodes, grabLatest(pod)];\n  // }\n\n  // allEpisodes = await Promise.all(allEpisodes);\n\n  // let flatList = [];\n  // allEpisodes.forEach((list) => {\n  //   list.forEach((episode) => {\n  //     flatList.push(episode);\n  //   });\n  // });\n  // flatList.sort(\n  //   (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n  // );\n\n  // const newPlaylist = await createPlaylist(currUser.id);\n  // addToPlaylist(newPlaylist.id, flatList);\n  // console.log(newPlaylist.id);\n  // console.log(flatList);\n\n  // useEffect(getSubscriptions, []);\n\n  // console.log(userId, subscribedPods.length);\n\n  return (\n    <div>\n      <h1> Latest Podcast Episdoes</h1>\n\n      {/* {subscribedPods.map((pod) => {\n        return (\n          <div>\n            <p>{pod.name}</p>\n            <img src={pod.images[2].url} />\n          </div>\n        );\n      })} */}\n    </div>\n  );\n}\n",["76","77"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js",["78","79"],"import React from \"react\";\nimport \"./modal.css\";\n\nexport default function EpisodeModal({ show, handleClose, children }) {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  console.log(\"should the modal be open?\", show);\n  return (\n    <div className={showHideClassName}>\n      <div className=\"modal-container\">\n        {children}\n        <a href=\"javascript:;\" className=\"modal-close\" onClick={handleClose}>\n          close\n        </a>\n      </div>\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js",["80","81"],"import { set } from \"js-cookie\";\nimport React from \"react\";\n\nexport default function ShowCard({\n  selectShows,\n  setSelectShows,\n  id,\n  name,\n  thumbnail,\n}) {\n  const checkOff = (e) => {\n    const { checked, name } = e.target;\n    if (checked) {\n      setSelectShows([...selectShows, name]);\n    } else {\n      setSelectShows(selectShows.filter((id) => id === name));\n    }\n  };\n\n  return (\n    <div class=\"sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 hover:bg-gray-300 p-3\">\n      <h1 class=\"text-white text-xl font-bold break-words  mx-auto\">{name}</h1>\n      <img class=\"mx-auto\" src={thumbnail.url} />\n      <input name={id} class=\"mx-auto\" type=\"checkbox\" onChange={checkOff} />\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/Success.js",["82","83"],{"ruleId":"84","severity":1,"message":"85","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":21},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"92","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":21},{"ruleId":"84","severity":1,"message":"93","line":1,"column":23,"nodeType":"86","messageId":"87","endLine":1,"endColumn":29},{"ruleId":"84","severity":1,"message":"94","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":21},{"ruleId":"88","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"84","severity":1,"message":"97","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":38,"column":28,"nodeType":"100","endLine":54,"endColumn":4},{"ruleId":"84","severity":1,"message":"101","line":82,"column":11,"nodeType":"86","messageId":"87","endLine":82,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":120,"column":25,"nodeType":"100","messageId":"104","endLine":120,"endColumn":27},{"ruleId":"98","severity":1,"message":"105","line":144,"column":31,"nodeType":"106","endLine":144,"endColumn":33,"suggestions":"107"},{"ruleId":"84","severity":1,"message":"101","line":5,"column":9,"nodeType":"86","messageId":"87","endLine":5,"endColumn":17},{"ruleId":"84","severity":1,"message":"108","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":25},{"ruleId":"84","severity":1,"message":"109","line":2,"column":27,"nodeType":"86","messageId":"87","endLine":2,"endColumn":36},{"ruleId":"84","severity":1,"message":"110","line":6,"column":11,"nodeType":"86","messageId":"87","endLine":6,"endColumn":25},{"ruleId":"84","severity":1,"message":"111","line":6,"column":27,"nodeType":"86","messageId":"87","endLine":6,"endColumn":44},{"ruleId":"84","severity":1,"message":"112","line":13,"column":9,"nodeType":"86","messageId":"87","endLine":13,"endColumn":19},{"ruleId":"84","severity":1,"message":"113","line":34,"column":9,"nodeType":"86","messageId":"87","endLine":34,"endColumn":19},{"ruleId":"84","severity":1,"message":"101","line":36,"column":11,"nodeType":"86","messageId":"87","endLine":36,"endColumn":19},{"ruleId":"84","severity":1,"message":"114","line":45,"column":9,"nodeType":"86","messageId":"87","endLine":45,"endColumn":23},{"ruleId":"84","severity":1,"message":"115","line":62,"column":9,"nodeType":"86","messageId":"87","endLine":62,"endColumn":22},{"ruleId":"88","replacedBy":"116"},{"ruleId":"90","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":9,"nodeType":"120","endLine":11,"endColumn":78},{"ruleId":"121","severity":1,"message":"122","line":11,"column":17,"nodeType":"123","messageId":"124","endLine":11,"endColumn":31},{"ruleId":"84","severity":1,"message":"125","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":23,"column":7,"nodeType":"120","endLine":23,"endColumn":50},{"ruleId":"126","severity":1,"message":"127","line":13,"column":11,"nodeType":"120","endLine":16,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":17,"column":11,"nodeType":"120","endLine":17,"endColumn":75},"no-unused-vars","'SpotifyPlayer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'SpotifyAuth' is defined but never used.","'Scopes' is defined but never used.","'SpotifyApiContext' is defined but never used.",["128"],["129"],"'withRouter' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'episodes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'axiosHeader' and 'grabUser'. Either include them or remove the dependency array.","ArrayExpression",["130"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'subscribedPods' is assigned a value but never used.","'setSubscribedPods' is assigned a value but never used.","'userHeader' is assigned a value but never used.","'grabLatest' is assigned a value but never used.","'createPlaylist' is assigned a value but never used.","'addToPlaylist' is assigned a value but never used.",["128"],["129"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'set' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [axiosHeader, grabUser]",{"range":"133","text":"134"},[3705,3707],"[axiosHeader, grabUser]"]