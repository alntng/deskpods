[{"/Users/Alan/Documents/JavaScript/deskpods/src/index.js":"1","/Users/Alan/Documents/JavaScript/deskpods/src/App.js":"2","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js":"3","/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js":"4","/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js":"5","/Users/Alan/Documents/JavaScript/deskpods/src/utils.js":"6","/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js":"7","/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js":"8","/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js":"9","/Users/Alan/Documents/JavaScript/deskpods/src/Success.js":"10"},{"size":651,"mtime":1615301366899,"results":"11","hashOfConfig":"12"},{"size":846,"mtime":1615301267118,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611930693944,"results":"14","hashOfConfig":"15"},{"size":1241,"mtime":1615232024788,"results":"16","hashOfConfig":"12"},{"size":5086,"mtime":1615307564366,"results":"17","hashOfConfig":"12"},{"size":304,"mtime":1614871066587,"results":"18","hashOfConfig":"12"},{"size":3489,"mtime":1614977596467,"results":"19","hashOfConfig":"12"},{"size":501,"mtime":1614961525737,"results":"20","hashOfConfig":"12"},{"size":695,"mtime":1615231560723,"results":"21","hashOfConfig":"12"},{"size":133,"mtime":1615307531599,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"z2dtmz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"2b9l4k",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Alan/Documents/JavaScript/deskpods/src/index.js",["49"],"/Users/Alan/Documents/JavaScript/deskpods/src/App.js",["50","51","52","53"],"/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js",[],["54","55"],"/Users/Alan/Documents/JavaScript/deskpods/src/LandingPage.js",[],["56","57"],"/Users/Alan/Documents/JavaScript/deskpods/src/LoggedIn.js",["58","59","60","61","62"],"/Users/Alan/Documents/JavaScript/deskpods/src/utils.js",["63"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/Episodes.js",["64","65","66","67","68","69","70","71","72"],"// import { grabLatest } from \"./utils\";\nimport React, { useState, useEffect } from \"react\";\nconst axios = require(\"axios\");\n\nexport default function Episodes(props) {\n  const { subscribedPods, setSubscribedPods, token } = props;\n\n  console.log(token);\n\n  // const [userId, setUserId] = useState(\"\");\n\n  //grab userId\n  const userHeader = {\n    headers: { Authorization: `Bearer ${token}` },\n  };\n\n  // const grabUser = async () => {\n  //   const foundUser = await axios.get(\n  //     \"https://api.spotify.com/v1/me\",\n  //     userHeader\n  //   );\n  //   return foundUser.data;\n  // };\n\n  //grab users'podcasts\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n\n    return res.data.items;\n  };\n\n  const createPlaylist = async (user_id) => {\n    const metaData = {\n      name: \"New Pods\",\n      description: \"Latest Podcasts\",\n      public: false,\n    };\n\n    const newPlaylist = await axios.post(\n      `https://api.spotify.com/v1/users/${user_id}/playlists`,\n      metaData,\n      axiosHeader\n    );\n\n    console.log(newPlaylist);\n    return newPlaylist.data;\n  };\n\n  const addToPlaylist = async (playlist_id, episodes) => {\n    const convertURI = (uri) => {\n      return uri.split(\":\").join(\"%3A\");\n    };\n\n    let episodesAdded = [];\n    for (let i = 0; i < 50; i++) {\n      const currEp = convertURI(episodes[i].uri);\n\n      episodesAdded.push(currEp);\n    }\n    episodesAdded = episodesAdded.join(\"%2C\");\n    console.log(\"new podcasts\", episodesAdded);\n\n    await axios.post(\n      `https://api.spotify.com/v1/playlists/${playlist_id}/tracks?uris=${episodesAdded}`,\n      {},\n      axiosHeader\n    );\n\n    console.log(\"added new episodes to playlist\");\n  };\n\n  // const getSubscriptions = async () => {\n  //   const res = await axios.get(\n  //     \"https://api.spotify.com/v1/me/shows?limit=50\",\n  //     axiosHeader\n  //   );\n\n  //   const subscriptions = [];\n\n  //   res.data.items.forEach(async (pod) => {\n  //     subscriptions.push(pod.show);\n  //   });\n\n  //   console.log(\"users subscriptions\", subscriptions);\n  //   const currUser = await grabUser();\n  //   setUserId(currUser.id);\n  //   setSubscribedPods(subscriptions);\n  // };\n\n  // let allEpisodes = [];\n\n  // for (const pod of subscriptions) {\n  //   let currList = grabLatest(pod, axiosHeader);\n  //   allEpisodes = [...allEpisodes, grabLatest(pod)];\n  // }\n\n  // allEpisodes = await Promise.all(allEpisodes);\n\n  // let flatList = [];\n  // allEpisodes.forEach((list) => {\n  //   list.forEach((episode) => {\n  //     flatList.push(episode);\n  //   });\n  // });\n  // flatList.sort(\n  //   (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n  // );\n\n  // const newPlaylist = await createPlaylist(currUser.id);\n  // addToPlaylist(newPlaylist.id, flatList);\n  // console.log(newPlaylist.id);\n  // console.log(flatList);\n\n  // useEffect(getSubscriptions, []);\n\n  // console.log(userId, subscribedPods.length);\n\n  return (\n    <div>\n      <h1> Latest Podcast Episdoes</h1>\n\n      {/* {subscribedPods.map((pod) => {\n        return (\n          <div>\n            <p>{pod.name}</p>\n            <img src={pod.images[2].url} />\n          </div>\n        );\n      })} */}\n    </div>\n  );\n}\n",["73","74"],"/Users/Alan/Documents/JavaScript/deskpods/src/components/EpisodeModal.js",["75","76"],"import React from \"react\";\nimport \"./modal.css\";\n\nexport default function EpisodeModal({ show, handleClose, children }) {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  console.log(\"should the modal be open?\", show);\n  return (\n    <div className={showHideClassName}>\n      <div className=\"modal-container\">\n        {children}\n        <a href=\"javascript:;\" className=\"modal-close\" onClick={handleClose}>\n          close\n        </a>\n      </div>\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/components/ShowCard.js",["77","78"],"import { set } from \"js-cookie\";\nimport React from \"react\";\n\nexport default function ShowCard({\n  selectShows,\n  setSelectShows,\n  id,\n  name,\n  thumbnail,\n}) {\n  const checkOff = (e) => {\n    const { checked, name } = e.target;\n    if (checked) {\n      setSelectShows([...selectShows, name]);\n    } else {\n      setSelectShows(selectShows.filter((id) => id === name));\n    }\n  };\n\n  return (\n    <div class=\"sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/6 hover:bg-gray-300 p-3\">\n      <h1 class=\"text-white text-xl font-bold break-words  mx-auto\">{name}</h1>\n      <img class=\"mx-auto\" src={thumbnail.url} />\n      <input name={id} class=\"mx-auto\" type=\"checkbox\" onChange={checkOff} />\n    </div>\n  );\n}\n","/Users/Alan/Documents/JavaScript/deskpods/src/Success.js",[],{"ruleId":"79","severity":1,"message":"80","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":21},{"ruleId":"79","severity":1,"message":"83","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":1,"column":23,"nodeType":"81","messageId":"82","endLine":1,"endColumn":29},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":21},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":38,"column":28,"nodeType":"95","endLine":54,"endColumn":4},{"ruleId":"79","severity":1,"message":"96","line":82,"column":11,"nodeType":"81","messageId":"82","endLine":82,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":120,"column":25,"nodeType":"95","messageId":"99","endLine":120,"endColumn":27},{"ruleId":"93","severity":1,"message":"100","line":144,"column":31,"nodeType":"101","endLine":144,"endColumn":33,"suggestions":"102"},{"ruleId":"79","severity":1,"message":"96","line":5,"column":9,"nodeType":"81","messageId":"82","endLine":5,"endColumn":17},{"ruleId":"79","severity":1,"message":"103","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"104","line":2,"column":27,"nodeType":"81","messageId":"82","endLine":2,"endColumn":36},{"ruleId":"79","severity":1,"message":"105","line":6,"column":11,"nodeType":"81","messageId":"82","endLine":6,"endColumn":25},{"ruleId":"79","severity":1,"message":"106","line":6,"column":27,"nodeType":"81","messageId":"82","endLine":6,"endColumn":44},{"ruleId":"79","severity":1,"message":"107","line":13,"column":9,"nodeType":"81","messageId":"82","endLine":13,"endColumn":19},{"ruleId":"79","severity":1,"message":"108","line":34,"column":9,"nodeType":"81","messageId":"82","endLine":34,"endColumn":19},{"ruleId":"79","severity":1,"message":"96","line":36,"column":11,"nodeType":"81","messageId":"82","endLine":36,"endColumn":19},{"ruleId":"79","severity":1,"message":"109","line":45,"column":9,"nodeType":"81","messageId":"82","endLine":45,"endColumn":23},{"ruleId":"79","severity":1,"message":"110","line":62,"column":9,"nodeType":"81","messageId":"82","endLine":62,"endColumn":22},{"ruleId":"86","replacedBy":"111"},{"ruleId":"88","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":11,"column":9,"nodeType":"115","endLine":11,"endColumn":78},{"ruleId":"116","severity":1,"message":"117","line":11,"column":17,"nodeType":"118","messageId":"119","endLine":11,"endColumn":31},{"ruleId":"79","severity":1,"message":"120","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":23,"column":7,"nodeType":"115","endLine":23,"endColumn":50},"no-unused-vars","'SpotifyPlayer' is defined but never used.","Identifier","unusedVar","'SpotifyAuth' is defined but never used.","'Scopes' is defined but never used.","'SpotifyApiContext' is defined but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"'withRouter' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'episodes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'axiosHeader' and 'grabUser'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'subscribedPods' is assigned a value but never used.","'setSubscribedPods' is assigned a value but never used.","'userHeader' is assigned a value but never used.","'grabLatest' is assigned a value but never used.","'createPlaylist' is assigned a value but never used.","'addToPlaylist' is assigned a value but never used.",["123"],["124"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'set' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [axiosHeader, grabUser]",{"range":"128","text":"129"},[3705,3707],"[axiosHeader, grabUser]"]