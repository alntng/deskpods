[{"/Users/Alan/Documents/JavaScript/deskpods/src/index.js":"1","/Users/Alan/Documents/JavaScript/deskpods/src/App.js":"2","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js":"3","/Users/Alan/Documents/JavaScript/deskpods/src/Episodes.js":"4"},{"size":500,"mtime":1615482272970,"results":"5","hashOfConfig":"6"},{"size":1134,"mtime":1615482272968,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611930693944,"results":"8","hashOfConfig":"6"},{"size":2037,"mtime":1615482272969,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z2dtmz",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/Alan/Documents/JavaScript/deskpods/src/index.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/App.js",["21","22","23","24"],"import { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport \"react-spotify-auth/dist/index.css\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport LandingPage from \"./LandingPage\";\nimport LoggedIn from \"./LoggedIn\";\n\nfunction App() {\n  const history = useHistory();\n  const token = Cookies.get(\"spotifyAuthToken\");\n  console.log(\"app history\", history);\n\n  return (\n    <div\n      className=\"app\"\n      class=\"--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(0, 0, 0, 0));\"\n    >\n      {token ? (\n        <LoggedIn history={history} token={token} />\n      ) : (\n        // Display the login page\n        <LandingPage />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",["25","26"],"/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/Episodes.js",["27","28","29","30","31","32"],"import React, { useState, useEffect } from \"react\";\nconst axios = require(\"axios\");\n\nexport default function Episodes(props) {\n  const token = props.token;\n  const [subscribedPods, setSubscribedPods] = useState([]);\n\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n\n    // console.log(\"episode list\", res);\n    // res.data.items.forEach((episode) => {\n    //   episodes.push(episode);\n    // });\n\n    return res.data.items;\n  };\n\n  const getSubscriptions = async () => {\n    const res = await axios.get(\n      \"https://api.spotify.com/v1/me/shows?limit=50\",\n      axiosHeader\n    );\n\n    const podList = [];\n    const episodes = [];\n\n    res.data.items.forEach(async (pod) => {\n      let { name, id, uri, external_urls } = pod.show;\n\n      podList.push({\n        name,\n        id,\n        uri,\n        external_urls,\n      });\n    });\n\n    console.log(podList);\n\n    let allEpisodes = [];\n\n    for (const pod of podList) {\n      let currList = grabLatest(pod);\n      allEpisodes = [...allEpisodes, grabLatest(pod)];\n    }\n\n    allEpisodes = await Promise.all(allEpisodes);\n\n    let flatList = [];\n    allEpisodes.forEach((list) => {\n      list.forEach((episode) => {\n        flatList.push(episode);\n      });\n    });\n\n    flatList.sort(\n      (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n    );\n\n    setSubscribedPods(flatList);\n    console.log(flatList);\n  };\n\n  useEffect(getSubscriptions, []);\n  //   getSubscriptions();\n\n  return (\n    <div>\n      <h1> Latest Podcast Episdoes</h1>\n      {subscribedPods.map((pod) => {\n        return (\n          <div>\n            <p>{pod.name}</p>\n            <img src={pod.images[2].url} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n",{"ruleId":"33","severity":1,"message":"34","line":1,"column":10,"nodeType":"35","messageId":"36","endLine":1,"endColumn":21},{"ruleId":"33","severity":1,"message":"37","line":1,"column":23,"nodeType":"35","messageId":"36","endLine":1,"endColumn":29},{"ruleId":"33","severity":1,"message":"38","line":2,"column":10,"nodeType":"35","messageId":"36","endLine":2,"endColumn":27},{"ruleId":"33","severity":1,"message":"39","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":21},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"33","severity":1,"message":"44","line":18,"column":11,"nodeType":"35","messageId":"36","endLine":18,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":32,"column":28,"nodeType":"47","endLine":76,"endColumn":4},{"ruleId":"33","severity":1,"message":"44","line":39,"column":11,"nodeType":"35","messageId":"36","endLine":39,"endColumn":19},{"ruleId":"33","severity":1,"message":"48","line":57,"column":11,"nodeType":"35","messageId":"36","endLine":57,"endColumn":19},{"ruleId":"45","severity":1,"message":"49","line":78,"column":31,"nodeType":"50","endLine":78,"endColumn":33,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":88,"column":13,"nodeType":"54","endLine":88,"endColumn":44},"no-unused-vars","'SpotifyAuth' is defined but never used.","Identifier","unusedVar","'Scopes' is defined but never used.","'SpotifyApiContext' is defined but never used.","'SpotifyPlayer' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'episodes' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'currList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosHeader' and 'grabLatest'. Either include them or remove the dependency array.","ArrayExpression",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [axiosHeader, grabLatest]",{"range":"60","text":"61"},[1743,1745],"[axiosHeader, grabLatest]"]