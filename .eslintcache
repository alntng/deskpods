[{"/Users/Alan/Documents/JavaScript/deskpods/src/index.js":"1","/Users/Alan/Documents/JavaScript/deskpods/src/App.js":"2","/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js":"3","/Users/Alan/Documents/JavaScript/deskpods/src/Episodes.js":"4"},{"size":500,"mtime":1611930693943,"results":"5","hashOfConfig":"6"},{"size":1222,"mtime":1614098292479,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611930693944,"results":"8","hashOfConfig":"6"},{"size":2037,"mtime":1614012670962,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"2b9l4k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/Alan/Documents/JavaScript/deskpods/src/index.js",[],["20","21"],"/Users/Alan/Documents/JavaScript/deskpods/src/App.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/reportWebVitals.js",[],"/Users/Alan/Documents/JavaScript/deskpods/src/Episodes.js",["22","23","24","25","26","27"],"import React, { useState, useEffect } from \"react\";\nconst axios = require(\"axios\");\n\nexport default function Episodes(props) {\n  const token = props.token;\n  const [subscribedPods, setSubscribedPods] = useState([]);\n\n  const axiosHeader = {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  const grabLatest = async (pod) => {\n    const { id } = pod;\n    const episodes = [];\n    const res = await axios.get(\n      `https://api.spotify.com/v1/shows/${id}/episodes?limit=5`,\n      axiosHeader\n    );\n\n    // console.log(\"episode list\", res);\n    // res.data.items.forEach((episode) => {\n    //   episodes.push(episode);\n    // });\n\n    return res.data.items;\n  };\n\n  const getSubscriptions = async () => {\n    const res = await axios.get(\n      \"https://api.spotify.com/v1/me/shows?limit=50\",\n      axiosHeader\n    );\n\n    const podList = [];\n    const episodes = [];\n\n    res.data.items.forEach(async (pod) => {\n      let { name, id, uri, external_urls } = pod.show;\n\n      podList.push({\n        name,\n        id,\n        uri,\n        external_urls,\n      });\n    });\n\n    console.log(podList);\n\n    let allEpisodes = [];\n\n    for (const pod of podList) {\n      let currList = grabLatest(pod);\n      allEpisodes = [...allEpisodes, grabLatest(pod)];\n    }\n\n    allEpisodes = await Promise.all(allEpisodes);\n\n    let flatList = [];\n    allEpisodes.forEach((list) => {\n      list.forEach((episode) => {\n        flatList.push(episode);\n      });\n    });\n\n    flatList.sort(\n      (a, b) => Date.parse(b.release_date) - Date.parse(a.release_date)\n    );\n\n    setSubscribedPods(flatList);\n    console.log(flatList);\n  };\n\n  useEffect(getSubscriptions, []);\n  //   getSubscriptions();\n\n  return (\n    <div>\n      <h1> Latest Podcast Episdoes</h1>\n      {subscribedPods.map((pod) => {\n        return (\n          <div>\n            <p>{pod.name}</p>\n            <img src={pod.images[2].url} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":18,"column":11,"nodeType":"34","messageId":"35","endLine":18,"endColumn":19},{"ruleId":"36","severity":1,"message":"37","line":32,"column":28,"nodeType":"38","endLine":76,"endColumn":4},{"ruleId":"32","severity":1,"message":"33","line":39,"column":11,"nodeType":"34","messageId":"35","endLine":39,"endColumn":19},{"ruleId":"32","severity":1,"message":"39","line":57,"column":11,"nodeType":"34","messageId":"35","endLine":57,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":78,"column":31,"nodeType":"41","endLine":78,"endColumn":33,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":88,"column":13,"nodeType":"45","endLine":88,"endColumn":44},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'episodes' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'currList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosHeader' and 'grabLatest'. Either include them or remove the dependency array.","ArrayExpression",["48"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [axiosHeader, grabLatest]",{"range":"51","text":"52"},[1743,1745],"[axiosHeader, grabLatest]"]